version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: progol_postgres
    environment:
      POSTGRES_USER: ${PG_USER:-progol_admin}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-progol_pass}
      POSTGRES_DB: ${PG_DB:-progol}
    ports:
      - "${PG_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-progol_admin}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - progol_network

  # Redis for Airflow
  redis:
    image: redis:7-alpine
    container_name: progol_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - progol_network

  # Airflow Webserver
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: progol_airflow_webserver
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${PG_USER:-progol_admin}:${PG_PASSWORD:-progol_pass}@postgres:5432/${PG_DB:-progol}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${PG_USER:-progol_admin}:${PG_PASSWORD:-progol_pass}@postgres:5432/${PG_DB:-progol}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
        airflow webserver
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - progol_network

  # Airflow Scheduler
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: progol_airflow_scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${PG_USER:-progol_admin}:${PG_PASSWORD:-progol_pass}@postgres:5432/${PG_DB:-progol}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${PG_USER:-progol_admin}:${PG_PASSWORD:-progol_pass}@postgres:5432/${PG_DB:-progol}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./logs:/opt/airflow/logs
    command: airflow scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - progol_network

  # Airflow Worker
  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: progol_airflow_worker
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${PG_USER:-progol_admin}:${PG_PASSWORD:-progol_pass}@postgres:5432/${PG_DB:-progol}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${PG_USER:-progol_admin}:${PG_PASSWORD:-progol_pass}@postgres:5432/${PG_DB:-progol}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - DUMB_INIT_SETSID=0
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./logs:/opt/airflow/logs
    command: celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - progol_network

  # Streamlit Dashboard
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: progol_streamlit
    depends_on:
      - postgres
    environment:
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_DB=${PG_DB:-progol}
      - PG_USER=${PG_USER:-progol_admin}
      - PG_PASSWORD=${PG_PASSWORD:-progol_pass}
      - STREAMLIT_SERVER_PORT=${STREAMLIT_PORT:-8501}
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./streamlit_app:/app/streamlit_app
      - ./src:/app/src
      - ./data:/app/data
      - ./.streamlit:/app/.streamlit
    ports:
      - "${STREAMLIT_PORT:-8501}:${STREAMLIT_PORT:-8501}"
    command: streamlit run streamlit_app/dashboard.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${STREAMLIT_PORT:-8501}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - progol_network

  # Jupyter Notebook (Development)
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: progol_jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./src:/home/jovyan/src
      - ./data:/home/jovyan/data
      - ./models:/home/jovyan/models
    ports:
      - "8888:8888"
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
    networks:
      - progol_network

  # pgAdmin (Optional - Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: progol_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@progol.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - progol_network
    profiles:
      - tools

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: progol_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - progol_network
    profiles:
      - monitoring

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: progol_grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    networks:
      - progol_network
    profiles:
      - monitoring

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  progol_network:
    driver: bridge